# Generated by Django 3.2.10 on 2022-02-10 17:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bait',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (en)')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name='name (fr)')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FishingArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nafo_area_code', models.CharField(blank=True, max_length=25, null=True, verbose_name='primary code')),
                ('herring_area_code', models.CharField(blank=True, max_length=25, null=True)),
            ],
            options={
                'ordering': ['nafo_area_code'],
            },
        ),
        migrations.CreateModel(
            name='Gear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gear', models.CharField(max_length=255)),
                ('gear_code', models.CharField(max_length=255)),
                ('isscfg_code', models.CharField(blank=True, max_length=255, null=True)),
                ('nafo_code', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ['gear_code'],
            },
        ),
        migrations.CreateModel(
            name='MeshSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size_mm', models.IntegerField(null=True, verbose_name='size in mm')),
                ('size_inches', models.CharField(blank=True, max_length=55, null=True, verbose_name='size in inches')),
                ('size_inches_decimal', models.FloatField(blank=True, null=True, verbose_name='size in inches (decimal)')),
            ],
            options={
                'ordering': ['size_mm'],
            },
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('province_code', models.CharField(choices=[('1', 'NS'), ('2', 'NB'), ('3', 'PE'), ('4', 'QC'), ('5', 'NL')], max_length=1, verbose_name='Province')),
                ('district_code', models.CharField(max_length=2)),
                ('port_code', models.CharField(max_length=2)),
                ('port_name', models.CharField(blank=True, max_length=100, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('herring_fishing_area_code', models.CharField(blank=True, max_length=100, null=True)),
                ('nafo_unit_area_code', models.CharField(blank=True, max_length=100, null=True)),
                ('alias_wharf_id', models.IntegerField(blank=True, null=True)),
                ('alias_wharf_name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ['port_name', 'province_code', 'district_code', 'port_code'],
                'unique_together': {('province_code', 'district_code', 'port_code')},
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aphia_id', models.IntegerField(blank=True, null=True, unique=True, verbose_name='WoRMS AphiaID')),
                ('common_name_en', models.CharField(blank=True, max_length=255, null=True, verbose_name='English common name')),
                ('common_name_fr', models.CharField(blank=True, max_length=255, null=True, verbose_name='French common name')),
                ('scientific_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Scientific name')),
            ],
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('sampler_ref_number', models.IntegerField(null=True, unique=True, verbose_name='reference number')),
                ('sampler', models.CharField(blank=True, max_length=255, null=True, verbose_name='sampler name')),
                ('experimental_net_used', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('vessel_cfvn', models.IntegerField(blank=True, null=True, verbose_name='vessel CFVN')),
                ('license_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='license number')),
                ('catch_weight_lbs', models.FloatField(blank=True, null=True, verbose_name='Catch weight (lbs)')),
                ('sample_weight_lbs', models.FloatField(blank=True, null=True, verbose_name='Sample weight (lbs)')),
                ('number_of_totes', models.IntegerField(blank=True, help_text='If a number is entered here, a random number will be drawn and displayed on the sample detail page.', null=True, verbose_name='Number of totes / pans')),
                ('random_tote_number_selected', models.IntegerField(blank=True, editable=False, null=True, verbose_name='Number of random tote selected')),
                ('remarks', models.TextField(blank=True, null=True)),
                ('season', models.IntegerField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('uuid', models.UUIDField(blank=True, null=True, verbose_name='UUID')),
                ('bait', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='port_samples', to='lengths.bait')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_by_port_samples', to=settings.AUTH_USER_MODEL)),
                ('fishing_area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='port_samples', to='lengths.fishingarea')),
                ('gear', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='port_samples', to='lengths.gear')),
                ('mesh_size', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='port_samples', to='lengths.meshsize')),
                ('port', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='port_samples', to='lengths.port')),
                ('species', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='port_samples', to='lengths.species')),
            ],
            options={
                'ordering': ['-sampler_ref_number'],
            },
        ),
        migrations.CreateModel(
            name='LengthsUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_admin', models.BooleanField(choices=[(1, 'Yes'), (0, 'No')], default=False, verbose_name='app administrator?')),
                ('is_crud_user', models.BooleanField(choices=[(1, 'Yes'), (0, 'No')], default=False, verbose_name='CRUD permissions?')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='lengths_user', to=settings.AUTH_USER_MODEL, verbose_name='DM Apps user')),
            ],
            options={
                'ordering': ['-is_admin', 'user__first_name'],
            },
        ),
        migrations.CreateModel(
            name='Fish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('length_bin_cm', models.FloatField()),
                ('kept', models.BooleanField(default=False)),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fishies', to='lengths.sample')),
            ],
            options={
                'ordering': ('sample', 'length_bin_cm'),
            },
        ),
    ]
